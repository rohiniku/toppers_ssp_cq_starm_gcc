
		TOPPERS/SSPカーネルの仕様概要

		対応バージョン: Release1.1.1
		最終更新: 2012年2月20日

このドキュメントは，TOPPERS/SSPカーネルの仕様概要について説明したもので
ある．TOPPERS/ASPカーネルからの差分および変更箇所とμITRON4.0仕様の最小
セットプロファイルからの差分を中心に説明する．

----------------------------------------------------------------------

----------------------------------------------------------------------
 TOPPERS/SSP Kernel
     Toyohashi Open Platform for Embedded Real-Time Systems/
     Smallest Set Profile Kernel

 Copyright (C) 2010-2012 by Meika Sugimoto
 
 上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
 ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
 変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
     権表示，この利用条件および下記の無保証規定が，そのままの形でソー
     スコード中に含まれていること．
 (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
     用できる形で再配布する場合には，再配布に伴うドキュメント（利用
     者マニュアルなど）に，上記の著作権表示，この利用条件および下記
     の無保証規定を掲載すること．
 (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
     用できない形で再配布する場合には，次のいずれかの条件を満たすこ
     と．
   (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
       作権表示，この利用条件および下記の無保証規定を掲載すること．
   (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
       報告すること．
 (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
     害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
     また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
     由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
     免責すること．
 
 本ソフトウェアは，無保証で提供されているものである．上記著作権者お
 よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
 に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
 アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
 の責任を負わない．
 
----------------------------------------------------------------------

○前提となる文書

[1] トロン協会: μITRON4.0仕様, Ver.4.02.00, 2004年.

[2] TOPPERSプロジェクト: TOPPERS新世代カーネル仕様書 Release 1.3.0

[3] TOPPERSプロジェクト: TOPPERS標準割込み処理モデル, 最終更新: 2008年
	4月11日.

○仕様の概略

TOPPERS/SSPカーネルの仕様は，TOPPERS/ASPカーネルの仕様に対して，
小規模アプリケーション向けに仕様を絞ったものである．最小セットに
おける"最小"とは，カーネルが使用するROM/RAM使用量を小さくするために
仕様を最適化することを意味する．

提供する機能はμITRON4.0仕様準拠の最低機能をベースとして，一部
自動車制御用プロファイルの機能を取り込む．

・提供するシステムサービスを制限する
・制約タスクのみをサポートする
・1つのタスク優先度に対して登録できるタスクは1つに限定する
・ROM/RAM使用量を少なくするための設計/実装を行う

さらに，SSPカーネル独自の仕様として以下の機能を導入する．

・タスクの実行時優先度
・共有スタック領域

このため，SSPカーネルはASPカーネルの下位互換でも上位互換でもない．

○提供するシステムサービスを制限する

TOPPERS/ASPが提供するシステムサービスのうち，μITRON4.0仕様書
5.1.2節で規定されたシステムサービスと，TOPPERS新世代カーネル
仕様で追加された一部のシステムサービスのみをサポートする．

サポートするシステムサービスは以下の通りである．

・CRE_TSK
・DEF_EPRI
・act_tsk,iact_tsk
・loc_cpu,iloc_cpu
・unl_cpu,iunl_cpu
・sns_ctx
・sns_loc
・sns_dsp
・sns_dpn
・sns_ker
・ena_dsp
・dis_dsp
・DEF_INH
・ATT_ISR
・CFG_INT
・ena_int
・dis_int
・ATT_INI
・ATT_TER
・ext_ker
・DEF_ICS

ただし，拡張パッケージを適用することで機能を追加することができる．

○制約タスクのみをサポートする

タスク間のスタック共有を前提とするため，自動車制御用プロファイルに
規定されている制約タスクを導入し，通常のタスクは廃止する．これは，
広義の待ち状態をサポートしないことを意味する．

○1つのタスク優先度に対して登録できるタスクは1つに限定する

1つのタスク優先度に対して登録できるタスクは一つとする．タスク優先度は
16であるため，最大で登録できるタスク数は16である．この制限はレディキュー
を不要とし，スケジューラの簡略化とRAM使用量の削減を図るためである．

○ROM/RAM使用量を少なくするための設計/実装を行う

少ないROM/RAMで動作させるためにサイズを優先した設計/実装を
行う．設計ではデータ構造の配列化を主とした最適化，実装では
より移植性を損なわない範囲での小さいデータ型の使用や可読性を
著しく低下させない範囲でのコードチューニングを行う．また，
コンパイラによる最適化も活用する(ただしコンパイラでの最適化は
環境による差異が大きいため，ターゲット依存である)．

○タスクの実行時優先度

実行時優先度はタスクが起動された後，最初に実行状態になる
時にタスクのベース優先度がに設定されるタスク優先度である．実行時
優先度の機能は，起動時優先度よりも高い優先度でタスクを実行することで，
同時期に共有スタック領域を使用している状態になるタスクの組み合わせを限
定し，スタック領域を節約するための機能である．

○共有スタック領域

SSPカーネルでは全てのタスクと割込みハンドラで連続したスタック領域を使用する．
これを共有スタック領域と呼ぶ．共有スタック領域を導入することでタスクの
実行時優先度によるタスクスタック領域を節約することができる．

○用意している拡張パッケージ

時間管理拡張パッケージを用意している．時間管理拡張パッケージには以下の機能が
含まれる．

・周期ハンドラ機能
・アラームハンドラ機能
・システム時刻管理機能

以上
